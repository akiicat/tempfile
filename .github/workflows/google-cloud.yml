name: Deploy to Google Cloud
on: [push]
jobs:
  deploy:
    name: GCP Authenticate
    runs-on: ubuntu-latest
    steps:
    # https://help.github.com/en/github/automating-your-workflow-with-github-actions/virtual-environments-for-github-actions
    # If you don't use the actions/checkout action, the directory will be empty. For example, /home/runner/work/my-repo-name/my-repo-name.
    - name: Repo Checkout to Master
      uses: actions/checkout@v1

    - name: Setup Google Cloud
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: ${{ secrets.ProjectID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_AUTH }}
      with:
        args: info

    - uses: actions/setup-go@v2-beta
      with:
        go-version: '^1.13.1' # The Go version to download (if necessary) and use.
    - name: Get Go Version
      run: go version

    - name: Set Default ProjectID
      run: |
        gcloud config set project ${{ secrets.ProjectID }}

    - name: Setup Signed Url Key
      run: |
        echo ${{ secrets.SignedUrlKey }} | base64 -d > signed-url-key.json

    - name: Setup Google Cloud Deploy Key
      run: |
        echo ${{ secrets.GCLOUD_AUTH }} | base64 -d > deploy-key.json
        gcloud auth activate-service-account --key-file ./deploy-key.json

    - name: List Files
      run: |
        ls -la

    - name: Create Bucket If Needed
      run: |
        gsutil ls -b -p ${{ secrets.ProjectID }} gs://${{ secrets.BucketName }} || gsutil mb -b on -c Standard -p ${{ secrets.ProjectID }} -l asia gs://${{ secrets.BucketName }}

    - name: Create Datastore Indexes If Needed
      run: |
        gcloud datastore indexes create db/index.yaml --quiet

    - name: Setup Lifecycle
      run: |
        gsutil lifecycle set -p ${{ secrets.ProjectID }} lifecycle.json gs://${{ secrets.BucketName }}
        gsutil lifecycle get -p ${{ secrets.ProjectID }} gs://${{ secrets.BucketName }}

    - name: Setup cors
      run: |
        gsutil cors set -p ${{ secrets.ProjectID }} cors.json gs://${{ secrets.BucketName }}
        gsutil cors get -p ${{ secrets.ProjectID }} gs://${{ secrets.BucketName }}

    - name: Setup Env
      run: |
        echo "PROJECT_ID: ${{  secrets.ProjectID }}" >> .env
        echo "BUCKET_NAME: ${{  secrets.BucketName }}" >> .env
        echo "SIGNED_URL_KEY: ${{  secrets.SignedUrlKey }}" >> .env

    - name: Deploy Home Function
      run: |
        gcloud functions deploy home --source=home --entry-point=HomePage --runtime=go113 --trigger-http --quiet --env-vars-file .env
        gcloud alpha functions add-iam-policy-binding home --member=allUsers --role=roles/cloudfunctions.invoker

    - name: Deploy Upload Function
      run: |
        cd upload
        go mod vendor
        cd ..
        gcloud functions deploy upload --source=upload --entry-point=UploadUrl --runtime=go113 --trigger-http --quiet --env-vars-file .env
        gcloud alpha functions add-iam-policy-binding upload --member=allUsers --role=roles/cloudfunctions.invoker

    - name: Deploy Download Function
      run: |
        cd download
        go mod vendor
        cd ..
        gcloud functions deploy download --source=download --entry-point=DownloadUrl --runtime=go113 --trigger-http --quiet --env-vars-file .env
        gcloud alpha functions add-iam-policy-binding download --member=allUsers --role=roles/cloudfunctions.invoker

