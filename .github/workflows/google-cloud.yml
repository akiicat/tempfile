name: Deploy to Google Cloud
on: [push]
jobs:
  deploy:
    name: GCP Authenticate
    runs-on: ubuntu-latest
    steps:
    # https://help.github.com/en/github/automating-your-workflow-with-github-actions/virtual-environments-for-github-actions
    # If you don't use the actions/checkout action, the directory will be empty. For example, /home/runner/work/my-repo-name/my-repo-name.
    - name: Repo Checkout to Master
      uses: actions/checkout@master

    - name: Setup Google Cloud
      uses: actions/gcloud/auth@master
      env:
        # https://github.com/actions/gcloud/issues/13#issuecomment-511596628
        GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}

    - name: Set Default ProjectID
      run: |
        gcloud config set project ${{ secrets.ProjectID }}

    - name: Setup Signed Url Key
      run: |
        echo ${{ secrets.SignedUrlKey }} | base64 -d > signed-url-key.json

    - name: Setup Google Cloud Deploy Key
      run: |
        echo ${{ secrets.GCLOUD_AUTH }} | base64 -d > deploy-key.json
        gcloud auth activate-service-account --key-file ./deploy-key.json

    - name: Rename Env Name (BucketName and CORSURL)
      run: |
        sed 's,<BUCKET_NAME>,${{ secrets.BucketName }},g' app.yaml > app.yaml
        sed 's,<CORS_URL>,${{ secrets.CORSURL }},g' gcs_cors.json > cors.json

    - name: List Files
      run: |
        ls -la

    - name: Create Bucket If Needed
      run: |
        gsutil mb -b on -c Standard -p ${{ secrets.ProjectID }} -l asia gs://${{ secrets.BucketName }}

    - name: Create Datastore Indexes If Needed
      run: |
        gcloud datastore indexes create index.yaml --quiet

    - name: Setup Lifecycle
      run: |
        gsutil lifecycle set -p ${{ secrets.ProjectID }} lifecycle.json gs://${{ secrets.BucketName }}
        gsutil lifecycle get -p ${{ secrets.ProjectID }} gs://${{ secrets.BucketName }}

    - name: Setup cors
      run: |
        gsutil cors set -p ${{ secrets.ProjectID }} cors.json gs://${{ secrets.BucketName }}
        gsutil cors get -p ${{ secrets.ProjectID }} gs://${{ secrets.BucketName }}

    - name: Install Require Libaray 
      uses: jefftriplett/python-actions@master
      with:
        args: "pip install -r requirements.txt -t lib"

    - name: Deploy to GCP
      uses: actions/gcloud/cli@master
      with:
        args: "app deploy app.yaml --quiet --stop-previous-version"
